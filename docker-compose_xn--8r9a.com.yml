# This file is designed for production server deployment, not local development work
# For a containerized local dev environment, see: https://github.com/mastodon/mastodon/blob/main/README.md#docker

services:
  web_xn--8r9a.com:
    # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes
    # build: .
    image: ghcr.io/mastodon/mastodon:v4.3.0
    restart: always
    env_file: .env.production.xn--8r9a.com
    command: bundle exec puma -C config/puma.rb
    networks:
      - external_network
      - internal_network
    healthcheck:
      # prettier-ignore
      test: ['CMD-SHELL',"curl -s --noproxy localhost localhost:3000/health | grep -q 'OK' || exit 1"]
    ports:
      - '127.0.0.1:3000:3000'
    depends_on:
      - db
      - redis
      # - es
    volumes:
      - ./public/system_xn--8r9a.com:/mastodon/public/system
      - ./app:/opt/mastodon/app
      - ./bin:/opt/mastodon/bin
      - ./config:/opt/mastodon/config
      - ./lib:/opt/mastodon/lib
      - ./.yarn:/opt/mastodon/.yarn

  streaming_xn--8r9a.com:
    # You can uncomment the following lines if you want to not use the prebuilt image, for example if you have local code changes
    # build:
    #   dockerfile: ./streaming/Dockerfile
    #   context: .
    image: ghcr.io/mastodon/mastodon-streaming:v4.3.0
    restart: always
    env_file: .env.production.xn--8r9a.com
    command: node ./streaming/index.js
    networks:
      - external_network
      - internal_network
    healthcheck:
      # prettier-ignore
      test: ['CMD-SHELL', "curl -s --noproxy localhost localhost:4000/api/v1/streaming/health | grep -q 'OK' || exit 1"]
    ports:
      - '127.0.0.1:4000:4000'
    depends_on:
      - db
      - redis

  sidekiq_xn--8r9a.com:
    # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes
    # build: .
    image: ghcr.io/mastodon/mastodon:v4.3.0
    restart: always
    env_file: .env.production.xn--8r9a.com
    command: bundle exec sidekiq
    depends_on:
      - db
      - redis
    networks:
      - external_network
      - internal_network
    volumes:
      - ./public/system_xn--8r9a.com:/mastodon/public/system
      - ./app:/opt/mastodon/app
      - ./bin:/opt/mastodon/bin
      - ./config:/opt/mastodon/config
      - ./lib:/opt/mastodon/lib
      - ./.yarn:/opt/mastodon/.yarn
    healthcheck:
      test: ['CMD-SHELL', "ps aux | grep '[s]idekiq\ 6' || false"]

networks:
  external_network:
  internal_network:
    internal: true
